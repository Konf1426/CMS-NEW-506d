security:
    # Password Hashers
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # User Providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # Firewalls
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false 

        api_login: # le notre
            pattern: /api/login
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: api_login
                username_path: 'email'

        api: # le nouvea
            pattern: ^/api/
            provider: app_user_provider
            stateless: true
            custom_authenticators:
                - App\Security\Authenticator\TokenAuthenticator

        #login:
        #    pattern: ^/api/login
        #    stateless: true
        #    provider: app_user_provider
        #    json_login:
        #        check_path: /api/login
        #        username_path: email
        #        password_path: password
        #        success_handler: lexik_jwt_authentication.handler.authentication_success
        #        failure_handler: lexik_jwt_authentication.handler.authentication_failure

        #api:
        #    pattern: ^/api
        #    stateless: true
        #    provider: app_user_provider
        #    custom_authenticators:
        #        - App\Security\JwtAuthenticator

    # Access Control
    access_control:
        - { path: ^/api/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/users, methods: [POST], roles: ROLE_ADMIN } # Admins peuvent créer des utilisateurs# Abonnés peuvent accéder à leur propre compte
        - { path: ^/api/contents, roles: PUBLIC_ACCESS }

        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
